apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd_HH_mm", TimeZone.getTimeZone("Asia/Shanghai"))
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.lm.android.gankapp"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        // 默认的友盟统计渠道
        manifestPlaceholders = [CHANNEL_VALUE: "test"]
    }

    android {
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
    }

    signingConfigs {
        debug {
            storeFile file("../../myreleasekey.keystore")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }

        release {
            storeFile file("../../myreleasekey.keystore")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "gankapp_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java'];
        }
    }

    productFlavors {
        other_market {}
        baidu_mobile_assistant {}
        google_play {}
        huawei {}
        leidian_search {}
        lenovomm {}
        meizu {}
        oppo {}
        tencent_android_myapp {}
        wandoujia {}
        xiaomi {}
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'

    // 图片加载框架
    compile 'com.github.bumptech.glide:glide:3.6.1'

    // log显示优化
    compile 'com.github.orhanobut:logger:1.12'

    // json解析
    compile 'com.google.code.gson:gson:2.4'

    // okhttp网络框架，bmob也使用该网络框架
    compile 'com.squareup.okhttp:okhttp:2.7.0'
    compile 'com.squareup.okio:okio:1.6.0'
    // okhttp工具库
    compile 'com.zhy:okhttputils:2.0.2'

    // bmob的im包，以下两个配置是im功能所需
    compile 'cn.bmob.android:bmob-im:1.1.9'
    compile 'cn.bmob.android:bmob-sdk:3.4.3'

    // leakcanary内存泄漏检测
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // icepick/icepick-processor Activity状态保存恢复
    compile 'frankiesardo:icepick:3.1.0'
    provided 'frankiesardo:icepick-processor:3.1.0'

    // greenDAO
    compile 'de.greenrobot:greendao:2.0.0'

    // ShareSDK
    compile project(':sharesdk')

    // 友盟统计
    compile 'com.umeng.analytics:analytics:latest.integration'
}
